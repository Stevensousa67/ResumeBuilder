# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-mock psycopg python-dotenv
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      working-directory: StevenSousa_Project_1
      env:
        DB_NAME_TEST: ${{ secrets.DB_NAME_TEST }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        GCP_DB_NAME_DEFAULT: ${{ secrets.GCP_DB_NAME_DEFAULT }}
        GCP_DB_USER_DEFAULT: ${{ secrets.GCP_DB_USER_DEFAULT }}
        GCP_DB_PASSWORD_DEFAULT: ${{ secrets.GCP_DB_PASSWORD_DEFAULT }}
        GCP_DB_HOST: ${{ secrets.GCP_DB_HOST }}
        GCP_DB_PORT: ${{ secrets.GCP_DB_PORT }}
      run: |
        python -m pytest tests/*.py
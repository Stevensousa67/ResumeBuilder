# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Django settings.py SECRET_KEY
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

      # Gemini API Key
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      # Supabase database credentials
      SUPABASE_HOST: ${{ secrets.SUPABASE_HOST }}
      SUPABASE_PORT: ${{ secrets.SUPABASE_PORT }}
      SUPABASE_DB_NAME: ${{ secrets.SUPABASE_DB_NAME }}
      SUPABASE_USER: ${{ secrets.SUPABASE_USER }}
      SUPABASE_PASSWORD: ${{ secrets.SUPABASE_PASSWORD }}

      # Default database credentials
      DB_NAME_DEFAULT: ${{ secrets.DB_NAME_DEFAULT }}
      DB_USER_DEFAULT: ${{ secrets.DB_USER_DEFAULT }}
      DB_PASSWORD_DEFAULT: ${{ secrets.DB_PASSWORD_DEFAULT }}
      DB_HOST_DEFAULT: ${{ secrets.DB_HOST_DEFAULT }}
      DB_PORT_DEFAULT: ${{ secrets.DB_PORT_DEFAULT }}

      # Custom database credentials
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME_DEFAULT }}
          POSTGRES_USER: ${{ secrets.DB_USER_DEFAULT }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD_DEFAULT }}
        ports:
           - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 Django django-formtools python-decouple beautifulsoup4 psycopg[binary,pool] google-genai xhtml2pdf markdown2 whitenoise
          if [ -f StevenSousa_Project1/requirements.txt ]; then pip install -r StevenSousa_Project1/requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

      - name: Run Django Management Commands
        working-directory: StevenSousa_Project_1/ResumeBuilder
        env:
          TESTING: "True"
        run: |
          python manage.py create_db
          python manage.py migrate
          python manage.py data_processing

      - name: Run Django Tests
        working-directory: StevenSousa_Project_1/ResumeBuilder
        run: |
          python manage.py test jobs.tests candidate.tests gemini.tests

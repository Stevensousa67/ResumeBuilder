name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      SUPABASE_HOST: ${{ secrets.SUPABASE_HOST }}
      SUPABASE_PORT: ${{ secrets.SUPABASE_PORT }}
      SUPABASE_DB_NAME: ${{ secrets.SUPABASE_DB_NAME }}
      SUPABASE_USER: ${{ secrets.SUPABASE_USER }}
      SUPABASE_PASSWORD: ${{ secrets.SUPABASE_PASSWORD }}
      DB_NAME_DEFAULT: ${{ secrets.DB_NAME_DEFAULT }}
      DB_USER_DEFAULT: ${{ secrets.DB_USER_DEFAULT }}
      DB_PASSWORD_DEFAULT: ${{ secrets.DB_PASSWORD_DEFAULT }}
      DB_HOST_DEFAULT: ${{ secrets.DB_HOST_DEFAULT }}
      DB_PORT_DEFAULT: ${{ secrets.DB_PORT_DEFAULT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME_DEFAULT }}
          POSTGRES_USER: ${{ secrets.DB_USER_DEFAULT }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD_DEFAULT }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

      - name: Run Django Management Commands
        working-directory: ./ResumeBuilder
        env:
          TESTING: "True"
        run: |
          python manage.py create_db
          python manage.py migrate
          python manage.py data_processing

      - name: Run Django Tests
        working-directory: ./ResumeBuilder
        run: |
          python manage.py test jobs.tests candidate.tests gemini.tests

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: stevensousa/resumebuilder:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push'
    steps:
      - name: Deploy to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$EC2_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${EC2_USER}@${EC2_HOST} << 'EOF'
            cd /home/ec2-user/ResumeBuilder
            /home/ec2-user/update-app.sh
          EOF
          rm -f private_key.pem
"""
Django settings for ResumeBuilder project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from decouple import config, AutoConfig
import os
import sys

# Auto-detect if running tests
TESTING = 'test' in sys.argv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

env_path = os.path.join(BASE_DIR, '.env')
if os.path.exists(env_path):
    env_config = AutoConfig(search_path=BASE_DIR)

GEMINI_API_KEY = config('GEMINI_API_KEY')
SECRET_KEY = config('SECRET_KEY')

DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'jobs',
    'candidate',
    'gemini',
    'formtools',
]

# Custom User Model
AUTH_USER_MODEL = 'candidate.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ResumeBuilder.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'ResumeBuilder/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ResumeBuilder.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('SUPABASE_DB_NAME'),
        'USER': config('SUPABASE_USER'),
        'PASSWORD': config('SUPABASE_PASSWORD'),
        'HOST': config('SUPABASE_HOST'),
        'PORT': config('SUPABASE_PORT'),
        'OPTIONS': {
            'sslmode': 'require',
        },

        # Localhost connection
        # 'NAME': config('DB_NAME', default='postgres'),
        # 'USER': config('DB_USER', default='postgres'),
        # 'PASSWORD': config('DB_PASSWORD', default='postgres'),
        # 'HOST': config('DB_HOST_DEFAULT', default='localhost'),
        # 'PORT': config('DB_PORT_DEFAULT', default='5432'),

        # GCP connection
        # 'NAME': config('GCP_DB_NAME', default='postgres'),
        # 'USER': config('GCP_USER', default='postgres'),
        # 'PASSWORD': config('GCP_PASSWORD', default='postgres'),
        # 'HOST': config('GCP_HOST', default='localhost'),
        # 'PORT': config('GCP_PORT', default='5432'),

    }
}

if TESTING:
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME_DEFAULT'),
        'USER': config('DB_USER_DEFAULT'),
        'PASSWORD': config('DB_PASSWORD_DEFAULT'),
        'HOST': config('DB_HOST_DEFAULT', default='localhost'),
        'PORT': config('DB_PORT_DEFAULT', default='5432'),
    }

# Render-specific settings
ALLOWED_HOSTS = ['*']
DEBUG = config('DEBUG', default=True, cast=bool)  # False in production

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / "ResumeBuilder/static",
    BASE_DIR / "ResumeBuilder/candidate/static",
    BASE_DIR / "ResumeBuilder/jobs/static",
]
STATIC_ROOT = BASE_DIR / "ResumeBuilder/staticfiles"
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Supabase Storage settings
AWS_ACCESS_KEY_ID = config('SUPABASE_API_KEY')
AWS_SECRET_ACCESS_KEY = config('SUPABASE_SERVICE_KEY')
AWS_STORAGE_BUCKET_NAME = 'media'
AWS_S3_ENDPOINT_URL = config('SUPABASE_URL') + '/storage/v1/s3' 
AWS_S3_REGION_NAME = 'auto'
AWS_S3_FILE_OVERWRITE = False
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
MEDIA_URL = f'{AWS_S3_ENDPOINT_URL}/{AWS_STORAGE_BUCKET_NAME}/'

# # Media files
# MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR / 'ResumeBuilder/media'

# Authentication redirects
LOGIN_URL = 'candidate:login'
LOGIN_REDIRECT_URL = 'jobs:jobs_list'  # Fallback, overridden by CustomLoginView
LOGOUT_REDIRECT_URL = 'jobs:jobs_list'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

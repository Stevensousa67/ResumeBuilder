from django.db import models
from django.conf import settings
from django.urls import reverse
from jobs.models import Job
from candidate.models import Profile


# Create your models here.
class GeneratedDocument(models.Model):
    """Base model for all generated documents"""
    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
    job = models.ForeignKey(Job, on_delete=models.CASCADE)
    profile = models.ForeignKey(Profile, on_delete=models.CASCADE)
    created_date = models.DateTimeField(auto_now_add=True)
    content = models.TextField(help_text="Markdown content of the generated document")

    class Meta:
        abstract = True


class GeneratedResume(GeneratedDocument):
    """Stores resumes generated by Gemini"""
    pdf_file = models.FileField(upload_to='resumes/%Y/%m/%d', blank=True, null=True)
    version = models.IntegerField(default=1)

    class Meta:
        db_table = 'gemini_resume'
        unique_together = ('user', 'job', 'profile', 'version')

    def __str__(self):
        return f"Resume for {self.profile.profile_name} - {self.job.title} (v{self.version})"

    def get_absolute_url(self):
        return reverse('gemini:resume_detail', kwargs={'pk': self.pk})


class GeneratedCoverLetter(GeneratedDocument):
    """Stores cover letters generated by Gemini"""
    pdf_file = models.FileField(upload_to='cover_letters/%Y/%m/%d', blank=True, null=True)
    version = models.IntegerField(default=1)

    class Meta:
        db_table = 'gemini_cover_letter'
        unique_together = ('user', 'job', 'profile', 'version')

    def __str__(self):
        return f"Cover Letter for {self.profile.profile_name} - {self.job.title} (v{self.version})"

    def get_absolute_url(self):
        return reverse('gemini:cover_letter_detail', kwargs={'pk': self.pk})

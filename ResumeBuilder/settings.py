"""
Django settings for ResumeBuilder project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from decouple import config
import os
import sys

# Auto-detect if running tests
TESTING = 'test' in sys.argv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


def get_config_value(key, default=None):
    if os.environ.get('AWS_REGION'):
        import boto3
        ssm = boto3.client('ssm', region_name=os.environ['AWS_REGION'])
        param_path = f"/resumebuilder/{key}"
        try:
            value = ssm.get_parameter(Name=param_path, WithDecryption=True)['Parameter']['Value']
            return value
        except Exception as e:
            print(f"SSM Error for {param_path}: {str(e)}")  # Add better logging
            if default is not None:
                return default
            raise RuntimeError(f"Could not fetch {param_path} from SSM: {e}")
    return config(key, default=default)


GEMINI_API_KEY = get_config_value('GEMINI_API_KEY')
SECRET_KEY = get_config_value('SECRET_KEY')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'jobs',
    'candidate',
    'gemini',
    'formtools',
]

# Custom User Model
AUTH_USER_MODEL = 'candidate.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ResumeBuilder.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ResumeBuilder.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        # Supabase connection
        'NAME': get_config_value('SUPABASE_DB_NAME'),
        'USER': get_config_value('SUPABASE_USER'),
        'PASSWORD': get_config_value('SUPABASE_PASSWORD'),
        'HOST': get_config_value('SUPABASE_HOST'),
        'PORT': get_config_value('SUPABASE_PORT'),
        'OPTIONS': {
            'sslmode': 'require',
        },

        # Localhost connection
        # 'NAME': get_config_values('DB_NAME', default='postgres'),
        # 'USER': get_config_values('DB_USER', default='postgres'),
        # 'PASSWORD': get_config_values('DB_PASSWORD', default='postgres'),
        # 'HOST': get_config_values('DB_HOST_DEFAULT', default='localhost'),
        # 'PORT': get_config_values('DB_PORT_DEFAULT', default='5432'),
    }
}

if TESTING:
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': get_config_value('DB_NAME_DEFAULT'),
        'USER': get_config_value('DB_USER_DEFAULT'),
        'PASSWORD': get_config_value('DB_PASSWORD_DEFAULT'),
        'HOST': get_config_value('DB_HOST_DEFAULT', default='localhost'),
        'PORT': get_config_value('DB_PORT_DEFAULT', default='5432'),
    }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         # Supabase connection
#         'NAME': config('SUPABASE_DB_NAME'),
#         'USER': config('SUPABASE_USER'),
#         'PASSWORD': config('SUPABASE_PASSWORD'),
#         'HOST': config('SUPABASE_HOST'),
#         'PORT': config('SUPABASE_PORT'),
#         'OPTIONS': {
#             'sslmode': 'require',
#         },

#         # Localhost connection
#         # 'NAME': config('DB_NAME', default='postgres'),
#         # 'USER': config('DB_USER', default='postgres'),
#         # 'PASSWORD': config('DB_PASSWORD', default='postgres'),
#         # 'HOST': config('DB_HOST_DEFAULT', default='localhost'),
#         # 'PORT': config('DB_PORT_DEFAULT', default='5432'),
#     }
# }

# if TESTING:
#     DATABASES['default'] = {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': config('DB_NAME_DEFAULT'),
#         'USER': config('DB_USER_DEFAULT'),
#         'PASSWORD': config('DB_PASSWORD_DEFAULT'),
#         'HOST': config('DB_HOST_DEFAULT', default='localhost'),
#         'PORT': config('DB_PORT_DEFAULT', default='5432'),
#     }

ALLOWED_HOSTS = [get_config_value('EC2_HOST'),'resumebuilder.stevensousa.com','127.0.0.1']
DEBUG = get_config_value('DEBUG')

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
    BASE_DIR / "candidate/static",
    BASE_DIR / "jobs/static",
]
print(BASE_DIR)
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Authentication redirects
LOGIN_URL = 'candidate:login'
LOGIN_REDIRECT_URL = 'jobs:jobs_list'  # Fallback, overridden by CustomLoginView
LOGOUT_REDIRECT_URL = 'jobs:jobs_list'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
